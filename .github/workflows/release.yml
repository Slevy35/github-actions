name: Release

on:
  release:
    types:
      - published
      
jobs:

  # Build and push to Docker hub
  Build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout to branch
        uses: actions/checkout@v2

      - name: Update RELEASE_TAG with release version
        run: |
          echo ::set-env name=RELEASE_TAG::${GITHUB_REF##*/}

      - name: Login to DockerHub Registry
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push to hub
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_REPOSITORY: node-app
          # RELEASE_TAG: ${GITHUB_REF##*/}
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$RELEASE_TAG .
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$RELEASE_TAG
          docker tag $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$RELEASE_TAG $DOCKER_REGISTRY/$DOCKER_REPOSITORY:stable
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:stable
  
  # Update container image of deployment
  Release:
    needs: Build
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1

    steps:

      - name: Checkout to branch
        uses: actions/checkout@v2

      - name: Update RELEASE_TAG
        run:  echo ::set-env name=RELEASE_TAG::${GITHUB_REF##*/}
      
      - name: Install CLIs
        run:  |
          sudo apt-get update
          sudo apt-get install -y awscli kubectl
          
      - name: Update kubeconfig
        env:
          CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ROLE_NAME: GithubActionsAssumeRole
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PROFILE_NAME: eks
        run:  |
          # aws credentials for mgmt account
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

          # role to assume in the stage/prod account
          aws configure set \
            role_arn arn:aws:iam::$AWS_ACCOUNT_ID:role/$ROLE_NAME \
            --profile $PROFILE_NAME
          aws configure set source_profile default --profile $PROFILE_NAME

          # Update kubeconfig file
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name $CLUSTER_NAME \
            --profile $PROFILE_NAME

      - name: Update deployment image version
        env:
          DEPLOYMENT_NAME: node-app
          DOCKER_REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_REPOSITORY: node-app
          NAMESPACE: node-app
          CONTAINER_NAME: node-app
          # RELEASE_TAG: ${GITHUB_REF##*/}
        run:  |
          kubectl set image \
            deployment/$DEPLOYMENT_NAME \
            --namespace=$NAMESPACE \
            $CONTAINER_NAME=$DOCKER_REGISTRY/$DOCKER_REPOSITORY:$RELEASE_TAG \
            --record